{
    "query": "Analyze reservoir distribution in provinces",
    "datasource": [
        "Reservoirs vector data",
        "Provinces vector data"
    ],
    "raw_code": "// Module 1: Load and prepare data\n// Load the reservoir and province shapefiles\nvar reservoirs = ee.FeatureCollection('users/your_username/reservoirs'); // 上传你的水库数据\nvar provinces = ee.FeatureCollection('users/your_username/provinces'); // 上传你的省份数据\n\n// Print to check the datasets\nprint('Reservoirs:', reservoirs);\nprint('Provinces:', provinces);\n\n// Module 2: Spatial analysis and statistics\n// Perform spatial join to associate reservoirs with provinces\n// First, define a function to calculate the area of reservoirs\nvar calculateArea = function(feature) {\n  var area = feature.geometry().area();\n  return feature.set('area', area);\n};\n\n// Apply the area calculation\nreservoirs = reservoirs.map(calculateArea);\n\n// Perform spatial join using the 'filterBounds' function\nvar reservoirsWithProvinces = reservoirs.filterBounds(provinces);\n\n// Group and aggregate the statistics by province\nvar provinceStats = provinces.map(function(province) {\n  var provinceReservoirs = reservoirsWithProvinces.filterBounds(province.geometry());\n  \n  var count = provinceReservoirs.size();  // Count number of reservoirs\n  var totalArea = provinceReservoirs.aggregate_sum('area');  // Sum the area of reservoirs\n\n  return province.set({\n    'Reservoir_Count': count,\n    'Total_Area': totalArea\n  });\n});\n\n// Module 3: Visualization - Reservoir count by province\n// Visualize the number of reservoirs in each province\nMap.centerObject(provinces, 6); // Center map on provinces\nvar countVis = {\n  min: 0,\n  max: 100,  // adjust based on your dataset\n  palette: ['blue', 'green', 'red']\n};\n\nMap.addLayer(provinceStats, {color: 'blue'}, 'Reservoir Count');\nMap.addLayer(provinces, {}, 'Provinces');\n\n// Module 4: Visualization - Total reservoir area by province\n// Visualize the total reservoir area in each province\nvar areaVis = {\n  min: 0,\n  max: 50000,  // adjust based on your dataset\n  palette: ['yellow', 'orange', 'red']\n};\n\nMap.addLayer(provinceStats, {color: 'red'}, 'Total Reservoir Area');\n\n// Module 5: Visualization - Reservoirs in a specific region (e.g., Tianjin)\nvar regionName = 'Tianjin';  // Define the region name\nvar selectedRegion = provinces.filter(ee.Filter.eq('ENG_NAME', regionName));\n\nvar reservoirsInRegion = reservoirs.filterBounds(selectedRegion);\n\n// Visualize the region and its reservoirs\nMap.addLayer(selectedRegion, {color: 'black'}, regionName + ' Boundary');\nMap.addLayer(reservoirsInRegion, {color: 'blue'}, 'Reservoirs in ' + regionName);\n\n// Display results\nprint('Region selected:', selectedRegion);\nprint('Reservoirs in region:', reservoirsInRegion);",
    "api": [
        "ee.FeatureCollection",
        "ee.Geometry.area",
        "ee.FilterBounds",
        "ee.Number.size",
        "ee.Reducer.sum",
        "Map.centerObject",
        "Map.addLayer"
    ],
    "processing step": [
        "Load reservoir and province shapefiles",
        "Calculate reservoir areas",
        "Spatially join reservoirs with provinces",
        "Aggregate reservoir stats by province",
        "Visualize reservoir counts by province",
        "Visualize total reservoir areas by province",
        "Select and visualize region-specific reservoirs"
    ],
    "output": "Map showing reservoir count by province."
}