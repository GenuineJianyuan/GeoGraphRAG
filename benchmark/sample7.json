{
    "query": "Detect linear features using edge detection and Hough transform",
    "datasource": [
        "Landsat8 TOA image"
    ],
    "raw_code": "// An example finding linear features using the HoughTransform.\n\n// Load an image and compute NDVI.\nvar image = ee.Image('LANDSAT/LC08/C02/T1_TOA/LC08_033032_20170719');\nvar ndvi = image.normalizedDifference(['B5', 'B4']);\n\n// Apply a Canny edge detector\nvar canny = ee.Algorithms.CannyEdgeDetector({\n  image: ndvi,\n  threshold: 0.4\n}).multiply(255);\n\n// Apply the Hough transform.\nvar h = ee.Algorithms.HoughTransform({\n  image: canny,\n  gridSize: 256,\n  inputThreshold: 50,\n  lineThreshold: 100\n});\n\n// Display.\nMap.setCenter(-103.80140, 40.21729, 13);\nMap.addLayer(image, {bands: ['B4', 'B3', 'B2'], max: 0.3}, 'source_image');\nMap.addLayer(canny.updateMask(canny), {min: 0, max: 1, palette: 'blue'}, 'canny');\nMap.addLayer(h.updateMask(h), {min: 0, max: 1, palette: 'red'}, 'hough');",
    "api": [
        "ee.Image.normalizedDifference",
        "ee.Algorithms.CannyEdgeDetector",
        "ee.Algorithms.HoughTransform",
        "Map.setCenter",
        "Map.addLayer"
    ],
    "processing step": [
        "Load Landsat 8 TOA image.",
        "Compute NDVI from the image.",
        "Apply Canny edge detection to NDVI.",
        "Multiply edge detector output by 255.",
        "Apply Hough transform to detect lines.",
        "Display source image with RGB bands.",
        "Display Canny edge detection result.",
        "Display Hough transform result."
    ],
    "output": "**map** showing linear features detected."
}