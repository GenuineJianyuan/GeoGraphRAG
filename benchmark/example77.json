{
    "query": "Edge detection using Sentinel-2 imagery",
    "datasource": [
        "Vector data (user-defined FeatureCollection)",
        "Sentinel-2 satellite imagery"
    ],
    "raw_code": "// Definir region de interes\n\nvar Peninsula = ee.FeatureCollection('users/Alejandro_AmayaH/EJE_ENE23_00-15');\nMap.addLayer (Peninsula, {'palette': 'F03B20', opacity:1}, 'Peninsula',false);\n\nvar composite = ee.ImageCollection('COPERNICUS/S2')\n.filterDate ('2020-01-01','2022-12-31')\n.filterBounds (Peninsula)\n.filter(ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE', 5));\n\nvar sentinel_comp = composite.median();\nvar visParams = {bands:['B4','B3','B2'],max:2000};\nMap.addLayer(sentinel_comp.clip(Peninsula),visParams,'Composite Peninsula', false) ;\n\n// Definir funcion Laplaciana/Gausiana o Kernel Edge Detection \n\nvar Gausiana = ee.Kernel.gaussian({radius:1.4, sigma:1, units:'pixels', normalize:true});\nvar Laplaciana = ee.Kernel.laplacian8 ({normalize: false});\n\n// Aplicar el kernel Edge Detection \nvar GausImage = sentinel_comp.convolve(Gausiana);\nvar EdgeImage = GausImage.convolve(Laplaciana);\nvar EdgeImageL = sentinel_comp.convolve(Laplaciana);\n\nMap.addLayer (EdgeImage.clip(Peninsula),{bands:['B8','B4','B3'], max:0.5,min:0}, 'Kernel Laplaciano-Gaus');\nMap.addLayer (EdgeImageL.clip(Peninsula),{bands:['B8','B4','B3'], max:0.5,min:0}, 'Kernel Laplaciano', false);\nMap.centerObject (Peninsula, 8);",
    "api": [
        "ee.FeatureCollection",
        "Map.addLayer",
        "ee.ImageCollection.filterDate",
        "ee.ImageCollection.filterBounds",
        "ee.Filter.lte",
        "ee.ImageCollection.median",
        "ee.Kernel.gaussian",
        "ee.Kernel.laplacian8",
        "ee.Image.convolve",
        "ee.Image.clip",
        "Map.centerObject"
    ],
    "processing step": [
        "Define region of interest using feature collection",
        "Filter Sentinel-2 images by date and cloud cover",
        "Compute median composite of filtered images",
        "Define Gaussian and Laplacian kernels for edge detection",
        "Apply Gaussian kernel to composite image",
        "Apply Laplacian kernel to Gaussian-filtered image",
        "Apply Laplacian kernel directly to composite image",
        "Visualize edge detection results with specific bands"
    ],
    "output": "Edge-detected satellite imagery"
}