{
    "query": "Vegetation distribution analysis",
    "datasource": [
        "vector data (administrative boundaries)",
        "NDVI data"
    ],
    "raw_code": "// Define Wuhan boundary\nvar wuhanBoundary = ee.FeatureCollection('users/your_username/Wuhan_shapefile');\n\n// Load NDVI time series\nvar ndviImages = [];\nfor (var year = 2016; year <= 2020; year++) {\n  var ndviImage = ee.Image(\"users/your_username/NDVImax\" + year);\n  ndviImages.push(ndviImage);\n}\n\n// Clip NDVI data\nvar clippedNDVI = ndviImages.map(function(image) {\n  return image.clip(wuhanBoundary);\n});\n\n// Create image stack\nvar ndviStack = ee.ImageCollection(clippedNDVI).toBands();\n\n// Linear regression\nvar regressionResult = ndviStack.reduceRegion({\n  reducer: ee.Reducer.linearFit(),\n  geometry: wuhanBoundary,\n  scale: 30,\n  maxPixels: 1e8\n});\n\n// Extract results\nvar slope = regressionResult.select('scale');\nvar pValue = regressionResult.select('offset');\n\n// Identify degradation\nvar degraded = slope.lt(0).and(pValue.lt(0.05));\n\n// Export result\nExport.image.toDrive({\n  image: degraded,\n  description: 'degraded_areas_Wuhan',\n  fileFormat: 'GeoTIFF',\n  region: wuhanBoundary,\n  scale: 30,\n  maxPixels: 1e8\n});",
    "api": [
        "ee.FeatureCollection",
        "ee.Image",
        "ee.Image.clip",
        "ee.ImageCollection.toBands",
        "ee.Reducer.linearFit",
        "ee.Image.reduceRegion",
        "ee.Image.select",
        "ee.Image.lt",
        "ee.Image.and",
        "Export.image.toDrive"
    ],
    "processing step": [
        "Load boundary feature collection",
        "Load NDVI images for multiple years",
        "Clip NDVI images to boundary",
        "Stack clipped NDVI images into a single image",
        "Perform linear regression on stacked NDVI data",
        "Extract slope and p-value from regression results",
        "Identify degraded areas using slope and p-value",
        "Export degraded areas as a GeoTIFF"
    ],
    "output": "Raster of degraded vegetation areas."
}