{
    "query": "Pan-sharpening using HSV method",
    "datasource": [
        "Landsat8 TOA RGB bands",
        "Landsat8 panchromatic band"
    ],
    "raw_code": "// HSV-based Pan-Sharpening\n\n// Grab a sample L8 image and pull out the RGB and pan bands.\nvar image = ee.Image(ee.ImageCollection('LANDSAT/LC08/C02/T1_TOA')\n  .filterDate('2017-01-01', '2017-12-31')\n  .filterBounds(ee.Geometry.Point(-122.0808, 37.3947))\n  .sort('CLOUD_COVER')\n  .first());\n\nvar rgb = image.select('B4', 'B3', 'B2');\nvar pan = image.select('B8');\n\n// Convert to HSV, swap in the pan band, and convert back to RGB.\nvar huesat = rgb.rgbToHsv().select('hue', 'saturation');\nvar upres = ee.Image.cat(huesat, pan).hsvToRgb();\n\n// There are many fine places to look; here is one.  Comment\n// this out if you want to twiddle knobs while panning around.\nMap.setCenter(-122.0808, 37.3947, 14);\n\n// Display before and after layers using the same vis parameters.\nMap.addLayer(rgb, {max: 0.3}, 'Original');\nMap.addLayer(upres, {max: 0.3}, 'Pansharpened');",
    "api": [
        "ee.ImageCollection",
        "ee.ImageCollection.filterDate",
        "ee.ImageCollection.filterBounds",
        "ee.ImageCollection.sort",
        "ee.ImageCollection.first",
        "ee.Geometry.Point",
        "ee.Image.select",
        "ee.Image.rgbToHsv",
        "ee.Image.select",
        "ee.Image.cat",
        "ee.Image.hsvToRgb",
        "Map.setCenter",
        "Map.addLayer"
    ],
    "processing step": [
        "Load a Landsat 8 TOA image collection.",
        "Filter image by date and location.",
        "Sort images by cloud cover.",
        "Select the least cloudy image.",
        "Extract RGB and panchromatic bands.",
        "Convert RGB bands to HSV space.",
        "Combine hue, saturation, and pan bands.",
        "Convert combined bands back to RGB.",
        "Display original and pansharpened images."
    ],
    "output": "Pansharpened RGB imagery."
}