{
    "query": "Quality mosaic generation",
    "datasource": [
        "LANDSAT/LE07/C02/T1"
    ],
    "raw_code": "// Array-based quality mosaic.\n\n// Returns a mosaic built by sorting each stack of pixels by the first band\n// in descending order, and taking the highest quality pixel.\nfunction qualityMosaic(bands) {\n  // Convert to an array, and declare names for the axes and indices along the\n  // band axis.\n  var array = bands.toArray();\n  var imageAxis = 0;\n  var bandAxis = 1;\n  var qualityIndex = 0;\n  var valuesIndex = 1;\n\n  // Slice the quality and values off the main array, and sort the values by the\n  // quality in descending order.\n  var quality = array.arraySlice(bandAxis, qualityIndex, qualityIndex + 1);\n  var values = array.arraySlice(bandAxis, valuesIndex);\n  var valuesByQuality = values.arraySort(quality.multiply(-1));\n\n  // Get an image where each pixel is the array of band values where the quality\n  // band is greatest. Note that while the array is 2-D, the first axis is\n  // length one.\n  var best = valuesByQuality.arraySlice(imageAxis, 0, 1);\n\n  // Project the best 2D array down to a single dimension, and convert it back\n  // to a regular scalar image by naming each position along the axis. Note we\n  // provide the original band names, but slice off the first band since the\n  // quality band is not part of the result. Also note to get at the band names,\n  // we have to do some kind of reduction, but it won't really calculate pixels\n  // if we only access the band names.\n  var bandNames = bands.min().bandNames().slice(1);\n  return best.arrayProject([bandAxis]).arrayFlatten([bandNames]);\n}\n\n// Load the l7_l1t collection for the year 2000, and make sure the first band\n// is our quality measure, in this case the normalized difference values.\nvar l7 = ee.ImageCollection('LANDSAT/LE07/C02/T1')\n    .filterDate('2000-01-01', '2001-01-01');\nvar withNd = l7.map(function(image) {\n  return image.normalizedDifference(['B4', 'B3']).addBands(image);\n});\n\n// Build a mosaic using the NDVI of bands 4 and 3, essentially showing the\n// greenest pixels from the year 2000\nvar greenest = qualityMosaic(withNd);\n\n// Select out the color bands to visualize. An interesting artifact of this\n// approach is that clouds are greener than water. So all the water is white.\nvar rgb = greenest.select(['B3', 'B2', 'B1']);\n\nMap.addLayer(rgb, {gain: [1.4, 1.4, 1.1]}, 'Greenest');\nMap.setCenter(-90.08789, 16.38339, 11);",
    "api": [
        "ee.ImageCollection",
        "ee.ImageCollection.filterDate",
        "ee.Image.normalizedDifference",
        "ee.Image.addBands",
        "ee.Image.toArray",
        "ee.Array.arraySlice",
        "ee.Array.arraySort",
        "ee.Array.arrayProject",
        "ee.Array.arrayFlatten",
        "ee.Image.min",
        "ee.List.slice",
        "ee.Image.select",
        "Map.addLayer",
        "Map.setCenter"
    ],
    "processing step": [
        "Convert image bands to array format.",
        "Slice quality and value bands from array.",
        "Sort values by quality in descending order.",
        "Select top-quality pixel values.",
        "Project 2D array to single dimension.",
        "Convert array back to image format.",
        "Select RGB bands for visualization."
    ],
    "output": "**Imagery of greenest pixels mosaic.**"
}