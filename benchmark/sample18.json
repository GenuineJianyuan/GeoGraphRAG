{
    "query": "Unsupervised land cover classification",
    "datasource": [
        "Landsat7 TOA annual composite",
        "Region of interest (vector)"
    ],
    "raw_code": "//unsupervised classification\n\n// Load a pre-computed Landsat composite for input.\nvar input = ee.Image('LANDSAT/LE7_TOA_1YEAR/2001');\n\n// Define a region in which to generate a sample of the input.\nvar region = ee.Geometry.Rectangle(29.7, 30, 32.5, 31.7);\n\n// Display the sample region.\nMap.setCenter(31.5, 31.0, 8);\nMap.addLayer(ee.Image().paint(region, 0, 2), {}, 'region');\n\n// Make the training dataset.\nvar training = input.sample({\n  region: region,\n  scale: 30,\n  numPixels: 5000\n});\n\n// Instantiate the clusterer and train it.\nvar clusterer = ee.Clusterer.wekaKMeans(15).train(training);\n\n// Cluster the input using the trained clusterer.\nvar result = input.cluster(clusterer).clip(region);\n\n// Display the clusters with random colors.\nMap.addLayer(result.randomVisualizer(), {}, 'clusters');",
    "api": [
        "ee.Image",
        "ee.Geometry.Rectangle",
        "Map.setCenter",
        "Map.addLayer",
        "ee.Image.paint",
        "ee.Image.sample",
        "ee.Clusterer.wekaKMeans",
        "ee.Clusterer.train",
        "ee.Image.cluster",
        "ee.Image.clip",
        "ee.Image.randomVisualizer"
    ],
    "processing step": [
        "Load pre-computed Landsat composite image",
        "Define rectangular region for sampling",
        "Display the defined sample region",
        "Create training dataset from sampled pixels",
        "Train KMeans clusterer with training data",
        "Cluster input image using trained clusterer",
        "Clip clustered result to defined region",
        "Display clusters with random colors"
    ],
    "output": "Unsupervised classified raster map."
}