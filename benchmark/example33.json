{
    "query": "Analyze spatial and temporal distribution of crime incidents",
    "datasource": [
        "Crime incident vector data",
        "User-uploaded tabular data"
    ],
    "raw_code": "var incidents = ee.FeatureCollection('users/your_asset/incident_data');\n\nvar map = Map;\nmap.centerObject(incidents, 12);\nvar violentIncidents = incidents.filter(ee.Filter.eq('violent', 1));\nvar nonViolentIncidents = incidents.filter(ee.Filter.eq('violent', 0));\nmap.addLayer(violentIncidents, {color: 'red'}, 'Violent Crimes');\nmap.addLayer(nonViolentIncidents, {color: 'blue'}, 'Non-Violent Crimes');\n\nvar incidentsByHour = incidents.map(function(feature) {\n  var hour = ee.Date(feature.get('time')).get('hour');\n  return feature.set('HrOfDay', hour);\n});\n\nvar hourlyCrimeStats = incidentsByHour.reduceColumns({\n  reducer: ee.Reducer.frequencyHistogram(),\n  selectors: ['HrOfDay', 'violent']\n});\n\nExport.table.toDrive({\n  collection: incidentsByHour,\n  description: 'hourly_crime_data',\n  fileFormat: 'CSV'\n});",
    "api": [
        "ee.FeatureCollection",
        "Map.centerObject",
        "ee.Filter.eq",
        "ee.FeatureCollection.filter",
        "Map.addLayer",
        "ee.Date",
        "ee.Date.get",
        "ee.Feature.set",
        "ee.Reducer.frequencyHistogram",
        "ee.FeatureCollection.reduceColumns",
        "Export.table.toDrive"
    ],
    "processing step": [
        "Load incident feature collection from asset",
        "Center map on incident locations",
        "Filter incidents into violent and non-violent",
        "Add layers for violent and non-violent incidents",
        "Map incidents to extract hour of occurrence",
        "Compute frequency histogram of incidents by hour",
        "Export hourly incident data to CSV"
    ],
    "output": "**Table of hourly crime data**"
}