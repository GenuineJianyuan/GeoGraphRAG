{
    "query": "Process Sentinel-1 VH band data",
    "datasource": [
        "Sentinel-1 GRD data",
        "Region of Interest (vector data)"
    ],
    "raw_code": "var roi = ee.Geometry.Polygon([[[99.93897157477, 13.432999494542837],[99.93897157477, 13.295380919961335],[100.081793840395, 13.295380919961335],[100.081793840395, 13.432999494542837]]], null, false);\n\nvar collectionVH = ee.ImageCollection('COPERNICUS/S1_GRD')\n  .filter(ee.Filter.eq('instrumentMode', 'IW'))\n  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))\n  .filterBounds(roi)\n  .select(['VH']);\n\nMap.centerObject(roi, 11);\nvar VH = collectionVH.median();\nvar VH1 = ee.Image(collectionVH.filterDate('2020-05-01', '2020-07-31').median());\nvar VH2 = VH1.clip(roi);\nMap.addLayer(VH2, {min: -32, max: -2}, 'VH Aug 2020');\nExport.image.toDrive({\n  image: VH2,\n  description: 'VH',\n  scale: 10,\n  region: roi\n});",
    "api": [
        "ee.Geometry.Polygon",
        "ee.Filter.eq",
        "ee.Filter.listContains",
        "ee.FilterBounds",
        "ee.ImageCollection.filter",
        "ee.ImageCollection.select",
        "Map.centerObject",
        "ee.ImageCollection.median",
        "ee.Image.clip",
        "Map.addLayer",
        "Export.image.toDrive"
    ],
    "processing step": [
        "Define region of interest using polygon geometry.",
        "Filter Sentinel-1 data for specific mode and polarization.",
        "Select VH polarization band from filtered data.",
        "Calculate median image from filtered collection.",
        "Filter collection for specific date range.",
        "Clip median image to region of interest.",
        "Add clipped image to map with defined visualization parameters.",
        "Export clipped image to Google Drive."
    ],
    "output": "Raster of median VH backscatter values."
}