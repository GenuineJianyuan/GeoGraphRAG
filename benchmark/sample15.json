{
    "query": "Spectral unmixing analysis",
    "datasource": [
        "Landsat5",
        "SRTM DEM"
    ],
    "raw_code": "// Array-based spectral unmixing.\n\n// Create a mosaic of Landsat 5 images from June through September, 2007.\nvar allBandMosaic = ee.ImageCollection('LANDSAT/LT05/C02/T1')\n  .filterDate('2007-06-01', '2007-09-30')\n  .select('B[0-7]')\n  .median();\n\n// Create some representative endmembers computed previously by sampling\n// the Landsat 5 mosaic.\nvar urbanEndmember = [88, 42, 48, 38, 86, 115, 59];\nvar vegEndmember = [50, 21, 20, 35, 50, 110, 23];\nvar waterEndmember = [51, 20, 14, 9, 7, 116, 4];\n\n// Compute the 3x7 pseudo inverse.\nvar endmembers = ee.Array([urbanEndmember, vegEndmember, waterEndmember]);\nvar inverse = ee.Image(endmembers.matrixPseudoInverse().transpose());\n\n// Convert the bands to a 2D 7x1 array. The toArray() call concatenates\n// pixels from each band along the default axis 0 into a 1D vector per\n// pixel, and the toArray(1) call concatenates each band (in this case\n// just the one band of 1D vectors) along axis 1, forming a 2D array.\nvar inputValues = allBandMosaic.toArray().toArray(1);\n\n// Matrix multiply the pseudo inverse of the endmembers by the pixels to\n// get a 3x1 set of endmembers fractions from 0 to 1.\nvar unmixed = inverse.matrixMultiply(inputValues);\n\n// Create and show a colored image of the endmember fractions. Since we know\n// the result has size 3x1, project down to 1D vectors at each pixel (since the\n// second axis is pointless now), and then flatten back to a regular scalar\n// image\nvar colored = unmixed\n  .arrayProject([0])\n  .arrayFlatten([['urban', 'veg', 'water']]);\nMap.setCenter(-98.4, 19, 11);\n\n// Load a hillshade to use as a backdrop.\nMap.addLayer(ee.Algorithms.Terrain(ee.Image('CGIAR/SRTM90_V4')).select('hillshade'));\nMap.addLayer(colored, {min: 0, max: 1},\n  'Unmixed (red=urban, green=veg, blue=water)');",
    "api": [
        "ee.ImageCollection.filterDate",
        "ee.ImageCollection.select",
        "ee.ImageCollection.median",
        "ee.Array.matrixPseudoInverse",
        "ee.Array.transpose",
        "ee.Image.toArray",
        "ee.Image.arrayProject",
        "ee.Image.arrayFlatten",
        "Map.setCenter",
        "Map.addLayer",
        "ee.Algorithms.Terrain"
    ],
    "processing step": [
        "Filter and mosaic Landsat images",
        "Define endmember spectra",
        "Compute pseudo-inverse of endmembers",
        "Convert image bands to 2D array",
        "Multiply pseudo-inverse by image array",
        "Project and flatten result to 1D",
        "Visualize unmixed fractions with colors"
    ],
    "output": "**Raster of urban, vegetation, water fractions.**"
}