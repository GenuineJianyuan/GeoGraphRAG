{
    "query": "Spatial distribution analysis of subway stations",
    "datasource": [
        "Vector data (subway stations and lines)"
    ],
    "raw_code": "// ================== Module 1: Environment Setup ==================\n// 设置工作空间环境\nvar outputFolder = 'users/your_username/output/'; // GEE 的输出目录\nvar stationsShp = 'users/your_username/station_points_Pro';  // 地铁站点数据\nvar linesShp = 'users/your_username/station_roads_Pro';     // 地铁线路数据\n\n// ================== Module 2: Standard Deviation Ellipse ==================\n// 加载地铁站点数据\nvar stations = ee.FeatureCollection(stationsShp);\n\n// 计算标准差椭圆，分析站点的空间分布\nvar ellipse = stations.reduceToImage({\n  properties: ['geometry'],\n  reducer: ee.Reducer.stdDev()\n});\n\n// 可视化标准差椭圆\nMap.centerObject(stations, 12);\nMap.addLayer(ellipse, {min: 0, max: 50, palette: ['blue', 'green']}, 'Standard Deviation Ellipse');\n\n// ================== Module 3: Feature Count and Statistics ==================\n// 输出统计信息：地铁站点数量和地铁线路数量\nvar stationCount = stations.size();\nvar lines = ee.FeatureCollection(linesShp);\nvar lineCount = lines.size();\n\nprint('Total number of subway stations: ', stationCount);\nprint('Total number of subway lines: ', lineCount);\n\n// ================== Module 4: Completion ==================\nprint('Program completed! All analysis results are saved in the output directory.');",
    "api": [
        "ee.FeatureCollection",
        "ee.Reducer.stdDev",
        "Map.centerObject",
        "Map.addLayer",
        "ee.Image"
    ],
    "processing step": [
        "Set up output folder and input data paths",
        "Load subway station data",
        "Calculate standard deviation ellipse",
        "Visualize standard deviation ellipse",
        "Count subway stations",
        "Count subway lines",
        "Print station and line counts",
        "Print completion message"
    ],
    "output": "Standard deviation ellipse map."
}